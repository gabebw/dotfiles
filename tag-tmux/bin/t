#!/usr/bin/env fish --no-config

### ~*~ t ~*~ ###
# Use `t blog` to connect to the `blog` session, or create a new session named
# `blog`.
#
# With no arguments, fuzzy-finds a session in a directory using the `projects`
# script.

if [ (count $argv) -gt 0 ] && [ $argv[1] = with-tmux ]
  set USE_FZF_TMUX true
  # Remove the first argument, like `shift` in Bash/Zsh
  set argv $argv[2..]
else
  set USE_FZF_TMUX false
end

function not_in_tmux
  [ -z "$TMUX" ]
end

# Attach if not in tmux, or switch if we are in tmux
function attach_to_tmux_session
  set -l session $argv[1]

  if not_in_tmux
    tmux attach -d -t $session
  else
    tmux switch-client -t $session
  end
end

# tmux doesn't allow . in session names
function tmux_normalize_session_name
  basename (string replace '.' '' $argv[1])
end

# Create a new tmux session with the given name.
# It's created in the background (`-d`) so it can be created when already in
# another tmux session.
function new_tmux_session_named -a new_session_name dir
  # -A means "attach if this already exists, otherwise create it"
  if [ -n "$dir" ]
    tmux new-session -d -As $new_session_name -c $dir
  else
    tmux new-session -d -As $new_session_name
  end
  attach_to_tmux_session $new_session_name
end

# Try to connect to a tmux session with the given name.
# If no such session exists, create it first, optionally inside a given
# directory.
function tmux_try_to_connect_to -a name dir
  if tmux-session-exists $name
    attach_to_tmux_session $name
  else
    echo "_new_tmux_session_named $name $dir"
    new_tmux_session_named $name $dir
  end
end

# Are we currently connected to the given session?
function connected_to
  set -l current_tmux_session $(tmux ls -F '#S #{session_attached}' 2>/dev/null | grep '1$' | cut -d' ' -f1)

  [ $argv[1] = $current_tmux_session ]
end

if [ (count $argv) -eq 1 ]
  tmux_try_to_connect_to $(tmux_normalize_session_name $argv[1])
  else if [ (count $argv) -eq 2 ]
  tmux_try_to_connect_to $(tmux_normalize_session_name $argv[1]) $argv[2]
else
  if $USE_FZF_TMUX
    set project_directory $(projects | fzf-tmux --reverse -d '85%')
  else
    set project_directory $(projects | fzf --reverse)
  end

  if [ -n "$project_directory" ]
    set session_name $(tmux_normalize_session_name $project_directory)

    if ! connected_to $session_name
      if tmux-session-exists $session_name
        attach_to_tmux_session $session_name
      else
        pushd $project_directory
        new_tmux_session_named $session_name
        popd
      end
    end
  end
end
